// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: metric_collector.proto

package metric_collector_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReceiveMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric *Metric `protobuf:"bytes,1,opt,name=Metric,proto3" json:"Metric,omitempty"`
}

func (x *ReceiveMetricRequest) Reset() {
	*x = ReceiveMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMetricRequest) ProtoMessage() {}

func (x *ReceiveMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMetricRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMetricRequest) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{0}
}

func (x *ReceiveMetricRequest) GetMetric() *Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

type ReceiveMetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiveMetricResponse) Reset() {
	*x = ReceiveMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMetricResponse) ProtoMessage() {}

func (x *ReceiveMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMetricResponse.ProtoReflect.Descriptor instead.
func (*ReceiveMetricResponse) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{1}
}

type ReceiveMetricBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*Metric `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"`
}

func (x *ReceiveMetricBatchRequest) Reset() {
	*x = ReceiveMetricBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMetricBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMetricBatchRequest) ProtoMessage() {}

func (x *ReceiveMetricBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMetricBatchRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMetricBatchRequest) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{2}
}

func (x *ReceiveMetricBatchRequest) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type ReceiveMetricBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiveMetricBatchResponse) Reset() {
	*x = ReceiveMetricBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveMetricBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMetricBatchResponse) ProtoMessage() {}

func (x *ReceiveMetricBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMetricBatchResponse.ProtoReflect.Descriptor instead.
func (*ReceiveMetricBatchResponse) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{3}
}

type ReadMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricName string `protobuf:"bytes,1,opt,name=MetricName,proto3" json:"MetricName,omitempty"`
	MetricType string `protobuf:"bytes,2,opt,name=MetricType,proto3" json:"MetricType,omitempty"`
}

func (x *ReadMetricRequest) Reset() {
	*x = ReadMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMetricRequest) ProtoMessage() {}

func (x *ReadMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMetricRequest.ProtoReflect.Descriptor instead.
func (*ReadMetricRequest) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{4}
}

func (x *ReadMetricRequest) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *ReadMetricRequest) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

type ReadMetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metric *Metric `protobuf:"bytes,1,opt,name=Metric,proto3" json:"Metric,omitempty"`
}

func (x *ReadMetricResponse) Reset() {
	*x = ReadMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMetricResponse) ProtoMessage() {}

func (x *ReadMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMetricResponse.ProtoReflect.Descriptor instead.
func (*ReadMetricResponse) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{5}
}

func (x *ReadMetricResponse) GetMetric() *Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

type ReadAllMetricRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllMetricRequest) Reset() {
	*x = ReadAllMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllMetricRequest) ProtoMessage() {}

func (x *ReadAllMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllMetricRequest.ProtoReflect.Descriptor instead.
func (*ReadAllMetricRequest) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{6}
}

type ReadAllMetricResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metrics []*Metric `protobuf:"bytes,1,rep,name=Metrics,proto3" json:"Metrics,omitempty"`
}

func (x *ReadAllMetricResponse) Reset() {
	*x = ReadAllMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllMetricResponse) ProtoMessage() {}

func (x *ReadAllMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllMetricResponse.ProtoReflect.Descriptor instead.
func (*ReadAllMetricResponse) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{7}
}

func (x *ReadAllMetricResponse) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type Metric struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricName string   `protobuf:"bytes,1,opt,name=MetricName,proto3" json:"MetricName,omitempty"`
	MetricType string   `protobuf:"bytes,2,opt,name=MetricType,proto3" json:"MetricType,omitempty"`
	Delta      *int64   `protobuf:"varint,3,opt,name=Delta,proto3,oneof" json:"Delta,omitempty"`
	Value      *float64 `protobuf:"fixed64,4,opt,name=Value,proto3,oneof" json:"Value,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metric_collector_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_metric_collector_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_metric_collector_proto_rawDescGZIP(), []int{8}
}

func (x *Metric) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *Metric) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *Metric) GetDelta() int64 {
	if x != nil && x.Delta != nil {
		return *x.Delta
	}
	return 0
}

func (x *Metric) GetValue() float64 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

var File_metric_collector_proto protoreflect.FileDescriptor

var file_metric_collector_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x22,
	0x4d, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x17,
	0x0a, 0x15, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x54, 0x0a, 0x19, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x1c, 0x0a,
	0x1a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x11, 0x52,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x4b, 0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x16, 0x0a,
	0x14, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x50, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37,
	0x0a, 0x07, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x05, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x48, 0x01, 0x52, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xc2, 0x03, 0x0a,
	0x0f, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x12, 0x6a, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c,
	0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x74, 0x0a, 0x12,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x30, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x61, 0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x12, 0x28, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x15, 0x5a, 0x13, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metric_collector_proto_rawDescOnce sync.Once
	file_metric_collector_proto_rawDescData = file_metric_collector_proto_rawDesc
)

func file_metric_collector_proto_rawDescGZIP() []byte {
	file_metric_collector_proto_rawDescOnce.Do(func() {
		file_metric_collector_proto_rawDescData = protoimpl.X.CompressGZIP(file_metric_collector_proto_rawDescData)
	})
	return file_metric_collector_proto_rawDescData
}

var file_metric_collector_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_metric_collector_proto_goTypes = []interface{}{
	(*ReceiveMetricRequest)(nil),       // 0: metric_collector_grpc.ReceiveMetricRequest
	(*ReceiveMetricResponse)(nil),      // 1: metric_collector_grpc.ReceiveMetricResponse
	(*ReceiveMetricBatchRequest)(nil),  // 2: metric_collector_grpc.ReceiveMetricBatchRequest
	(*ReceiveMetricBatchResponse)(nil), // 3: metric_collector_grpc.ReceiveMetricBatchResponse
	(*ReadMetricRequest)(nil),          // 4: metric_collector_grpc.ReadMetricRequest
	(*ReadMetricResponse)(nil),         // 5: metric_collector_grpc.ReadMetricResponse
	(*ReadAllMetricRequest)(nil),       // 6: metric_collector_grpc.ReadAllMetricRequest
	(*ReadAllMetricResponse)(nil),      // 7: metric_collector_grpc.ReadAllMetricResponse
	(*Metric)(nil),                     // 8: metric_collector_grpc.Metric
}
var file_metric_collector_proto_depIdxs = []int32{
	8, // 0: metric_collector_grpc.ReceiveMetricRequest.Metric:type_name -> metric_collector_grpc.Metric
	8, // 1: metric_collector_grpc.ReceiveMetricBatchRequest.Metrics:type_name -> metric_collector_grpc.Metric
	8, // 2: metric_collector_grpc.ReadMetricResponse.Metric:type_name -> metric_collector_grpc.Metric
	8, // 3: metric_collector_grpc.ReadAllMetricResponse.Metrics:type_name -> metric_collector_grpc.Metric
	0, // 4: metric_collector_grpc.MetricCollector.ReceiveMetric:input_type -> metric_collector_grpc.ReceiveMetricRequest
	2, // 5: metric_collector_grpc.MetricCollector.ReceiveMetricBatch:input_type -> metric_collector_grpc.ReceiveMetricBatchRequest
	4, // 6: metric_collector_grpc.MetricCollector.ReadMetric:input_type -> metric_collector_grpc.ReadMetricRequest
	6, // 7: metric_collector_grpc.MetricCollector.ReadAllMetric:input_type -> metric_collector_grpc.ReadAllMetricRequest
	1, // 8: metric_collector_grpc.MetricCollector.ReceiveMetric:output_type -> metric_collector_grpc.ReceiveMetricResponse
	1, // 9: metric_collector_grpc.MetricCollector.ReceiveMetricBatch:output_type -> metric_collector_grpc.ReceiveMetricResponse
	5, // 10: metric_collector_grpc.MetricCollector.ReadMetric:output_type -> metric_collector_grpc.ReadMetricResponse
	7, // 11: metric_collector_grpc.MetricCollector.ReadAllMetric:output_type -> metric_collector_grpc.ReadAllMetricResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_metric_collector_proto_init() }
func file_metric_collector_proto_init() {
	if File_metric_collector_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metric_collector_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMetricBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveMetricBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metric_collector_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_metric_collector_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metric_collector_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metric_collector_proto_goTypes,
		DependencyIndexes: file_metric_collector_proto_depIdxs,
		MessageInfos:      file_metric_collector_proto_msgTypes,
	}.Build()
	File_metric_collector_proto = out.File
	file_metric_collector_proto_rawDesc = nil
	file_metric_collector_proto_goTypes = nil
	file_metric_collector_proto_depIdxs = nil
}
